<UserControl x:Class="Exercise.Manager.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ViewModels="clr-namespace:Exercise.Manager.ViewModels"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cal="http://www.caliburnproject.org" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             d:DataContext="{d:DesignInstance ViewModels:MainViewModel}"
             mc:Ignorable="d">
    <TabControl TabStripPlacement="Left" HorizontalAlignment="Stretch" x:Name="Items">
        <TabControl.Template>

            <ControlTemplate TargetType="TabControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">

                <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="ColumnDefinition0" />
                        <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" Name="RowDefinition0" />
                        <RowDefinition Height="*" Name="RowDefinition1" />
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock>EM</TextBlock>
                        <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="2,2,2,0" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" />
                    </StackPanel>

                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
                        <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </Grid>

                <ControlTemplate.Triggers>

                    <Trigger Property="TabControl.TabStripPlacement">

                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1"/>

                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>

                        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>

                        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto"/>

                        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2"/>

                        <Trigger.Value>
                            <x:Static Member="Dock.Bottom" />
                        </Trigger.Value>
                    </Trigger>

                    <Trigger Property="TabControl.TabStripPlacement">

                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>

                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>

                        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0">

                        </Setter>

                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>

                        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto"/>

                        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*"/>

                        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>

                        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>

                        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,0,2"/>

                        <Trigger.Value>
                            <x:Static Member="Dock.Left" />
                        </Trigger.Value>
                    </Trigger>

                    <Trigger Property="TabControl.TabStripPlacement">

                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>

                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>

                        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1"/>

                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>

                        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*"/>

                        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto"/>

                        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>

                        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>

                        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0,2,2,2"/>

                        <Trigger.Value>
                            <x:Static Member="Dock.Right" />
                        </Trigger.Value>
                    </Trigger>

                    <Trigger Property="UIElement.IsEnabled">

                        <Setter Property="TextElement.Foreground">

                            <Setter.Value>
                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                            </Setter.Value>
                        </Setter>

                        <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                        </Trigger.Value>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </TabControl.Template>

        <TabControl.ItemContainerStyle>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="TabItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

                            <Grid SnapsToDevicePixels="True">

                                <Border BorderThickness="1,1,1,0" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd">
                                    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" Name="Content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>

                                <Trigger Property="UIElement.IsMouseOver">

                                    <Setter TargetName="Bd" Property="Panel.Background">

                                        <Setter.Value>

                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#FFEAF6FD" Offset="0.15" />
                                                    <GradientStop Color="#FFD9F0FC" Offset="0.5" />
                                                    <GradientStop Color="#FFBEE6FD" Offset="0.5" />
                                                    <GradientStop Color="#FFA7D9F5" Offset="1" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>

                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>

                                <Trigger Property="Selector.IsSelected">

                                    <Setter Property="Panel.ZIndex">

                                        <Setter.Value>
                                            <s:Int32>1</s:Int32>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="Bd" Property="Panel.Background" Value="#FFF9F9F9"/>

                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>

                                <MultiTrigger>

                                    <MultiTrigger.Conditions>

                                        <Condition Property="Selector.IsSelected">

                                            <Condition.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Condition.Value>
                                        </Condition>

                                        <Condition Property="UIElement.IsMouseOver">

                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Bd" Property="Border.BorderBrush" Value="#FF3C7FB1"/>
                                </MultiTrigger>

                                <Trigger Property="TabItem.TabStripPlacement">

                                    <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,0,1,1"/>

                                    <Trigger.Value>
                                        <x:Static Member="Dock.Bottom" />
                                    </Trigger.Value>
                                </Trigger>

                                <Trigger Property="TabItem.TabStripPlacement">

                                    <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,1,0,1"/>

                                    <Trigger.Value>
                                        <x:Static Member="Dock.Left" />
                                    </Trigger.Value>
                                </Trigger>

                                <Trigger Property="TabItem.TabStripPlacement">

                                    <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,1,1,1"/>

                                    <Trigger.Value>
                                        <x:Static Member="Dock.Right" />
                                    </Trigger.Value>
                                </Trigger>

                                <MultiTrigger>

                                    <MultiTrigger.Conditions>

                                        <Condition Property="Selector.IsSelected">

                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="FrameworkElement.Margin">

                                        <Setter.Value>
                                            <Thickness>-2,-2,-2,-1</Thickness>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
                                </MultiTrigger>

                                <MultiTrigger>

                                    <MultiTrigger.Conditions>

                                        <Condition Property="Selector.IsSelected">

                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="FrameworkElement.Margin">

                                        <Setter.Value>
                                            <Thickness>-2,-1,-2,-2</Thickness>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,0"/>
                                </MultiTrigger>

                                <MultiTrigger>

                                    <MultiTrigger.Conditions>

                                        <Condition Property="Selector.IsSelected">

                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="FrameworkElement.Margin">

                                        <Setter.Value>
                                            <Thickness>-2,-2,-1,-2</Thickness>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,1,0"/>
                                </MultiTrigger>

                                <MultiTrigger>

                                    <MultiTrigger.Conditions>

                                        <Condition Property="Selector.IsSelected">

                                            <Condition.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="FrameworkElement.Margin">

                                        <Setter.Value>
                                            <Thickness>-1,-2,-2,-2</Thickness>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="1,0,0,0"/>
                                </MultiTrigger>

                                <Trigger Property="UIElement.IsEnabled">

                                    <Setter TargetName="Bd" Property="Panel.Background" Value="#FFF4F4F4"/>

                                    <Setter TargetName="Bd" Property="Border.BorderBrush" Value="#FFC9C7BA"/>

                                    <Setter Property="TextElement.Foreground">

                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>

                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TabControl.ItemContainerStyle>

        <TabControl.ItemTemplate>
            <DataTemplate>
                <TextBlock Text="{Binding Title}"/>
            </DataTemplate>
        </TabControl.ItemTemplate>
    </TabControl>
</UserControl>